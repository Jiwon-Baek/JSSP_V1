
import os
from datetime import datetime

jobs_data = [
    [(0, 3), (1, 2), (3,2), (2, 2)],
    [(0, 2), (3,3), (2, 1), (1, 4)],
    [(3,4), (1, 4), (2, 3), (0, 2)],
    [(1,4), (2, 3), (0, 3), (3, 2)]
]
# jobs_data = [
#     [(0, 29), (1, 78), (2, 9), (3, 36), (4, 49), (5, 11), (6, 62), (7, 56), (8, 44), (9, 21)],
#     [(0, 43), (2, 90), (4, 75), (9, 11), (3, 69), (1, 28), (6, 46), (5, 46), (7, 72), (8, 30)],
#     [(1, 91), (0, 85), (3, 39), (2, 74), (8, 90), (5, 10), (7, 12), (6, 89), (9, 45), (4, 33)],
#     [(1, 81), (2, 95), (0, 71), (4, 99), (6, 9), (8, 52), (7, 85), (3, 98), (9, 22), (5, 43)],
#     [(2, 14), (0, 6), (1, 22), (5, 61), (3, 26), (4, 69), (8, 21), (7, 49), (9, 72), (6, 53)],
#     [(2, 84), (1, 2), (5, 52), (3, 95), (8, 48), (9, 72), (0, 47), (6, 65), (4, 6), (7, 25)],
#     [(1, 46), (0, 37), (3, 61), (2, 13), (6, 32), (5, 21), (9, 32), (8, 89), (7, 30), (4, 55)],
#     [(2, 31), (0, 86), (1, 46), (5, 74), (4, 32), (6, 88), (8, 19), (9, 48), (7, 36), (3, 79)],
#     [(0, 76), (1, 69), (3, 76), (5, 51), (2, 85), (9, 11), (6, 40), (7, 89), (4, 26), (8, 74)],
#     [(1, 85), (0, 13), (2, 61), (6, 7), (8, 64), (9, 76), (5, 47), (3, 52), (4, 90), (7, 45)]
# ]


data = [
    [(0, 29), (1, 78), (2, 9), (3, 36), (4, 49), (5, 11), (6, 62), (7, 56), (8, 44), (9, 21)],
    [(0, 43), (2, 90), (4, 75), (9, 11), (3, 69), (1, 28), (6, 46), (5, 46), (7, 72), (8, 30)],
    [(1, 91), (0, 85), (3, 39), (2, 74), (8, 90), (5, 10), (7, 12), (6, 89), (9, 45), (4, 33)],
    [(1, 81), (2, 95), (0, 71), (4, 99), (6, 9), (8, 52), (7, 85), (3, 98), (9, 22), (5, 43)],
    [(2, 14), (0, 6), (1, 22), (5, 61), (3, 26), (4, 69), (8, 21), (7, 49), (9, 72), (6, 53)],
    [(2, 84), (1, 2), (5, 52), (3, 95), (8, 48), (9, 72), (0, 47), (6, 65), (4, 6), (7, 25)],
    [(1, 46), (0, 37), (3, 61), (2, 13), (6, 32), (5, 21), (9, 32), (8, 89), (7, 30), (4, 55)],
    [(2, 31), (0, 86), (1, 46), (5, 74), (4, 32), (6, 88), (8, 19), (9, 48), (7, 36), (3, 79)],
    [(0, 76), (1, 69), (3, 76), (5, 51), (2, 85), (9, 11), (6, 40), (7, 89), (4, 26), (8, 74)],
    [(1, 85), (0, 13), (2, 61), (6, 7), (8, 64), (9, 76), (5, 47), (3, 52), (4, 90), (7, 45)]
]
# NUM_MACHINE = len(jobs_data[0])

# Job 개수와 Machine 개수가 일치하지 않을 때 Max값을 찾는 코드 (Job이 10개인데 Machine은 15대를 쓴다던가, 등)
NUM_MACHINE = 0
for i in range(len(jobs_data)):
    for j in range(len(jobs_data[i])):
        # print(jobs_data[i][j][0])
        max_machine = jobs_data[i][j][0]
        if max_machine > NUM_MACHINE:
            NUM_MACHINE = max_machine
NUM_MACHINE += 1


n_op = 100
n_show = n_op + 1
show_interval_time = 100
finished_pause_time = 1000


# Visualization Variables
TITLE = "Manual Machine Order Input"

# Directory Configuration
script_dir = os.path.dirname(os.path.abspath(__file__))  # Get the directory of the current script
folder_name = 'result'  # Define the folder name
save_path = './../result'  # Construct the full path to the folder

if not os.path.exists(save_path):
    os.makedirs(save_path)

now = datetime.now()
filename = now.strftime('%Y-%m-%d-%H-%M-%S')
filepath = os.path.join(save_path, filename+'.csv')
# create a column with the color for each department